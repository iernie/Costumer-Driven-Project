loglocation				-> string/filepath				-: where the log is written to. can't be changed once the UI is called
loglevel				-> string/logging level			-: what level to log at
inDBLoc					-> string/filepath				-: where to read the past history from
outDBLoc				-> string/filepath				-: where to write DB- defaults to where it reads from
inWeightsLoc			-> string/filepath				-: where to read the weights config file from
outWeightsLoc			-> string/filepath				-: where to write DB- defaults to where it reads from
newDB 	 				-> string/boolean				-: are we overwriting/ignoring an old database
p3pLocation				-> string/filepath				-: a p3p to be added to the history
p3pDirLocation			-> string/FOLDERpath			-: a folder of p3ps to be added to the history
blanketAccept			-> string/boolean				-: accept the advisers recommendation
newPolicyLoc			-> string/filepath				-: the new policy to be parsed
userInit				-> string/boolean				-: true if some initialization occurs via the user interface
userResponse			-> string/action				-: the response to the suggestion, if know beforehand
cbrV					-> string/CBR					-: parses for algorithms, etc to use. See CBR:parse(String)
userIO					-> string/UIO					-: the user interface to use. see Gio:selectUI.
policyDB				-> string/policyDB				-: select the database type. see Gio:selectPDB 
genConfig				-> string/filepath				-: load an alternate configuration file (not './PrivacyAdvisor.cfg')
networkRType			-> string/classname				-: the name of a networkR class
networkROptions			-> string/commasepoptions		-: the options necessary for the above networkR class
confidenceLevel			-> string/double				-: the confidence level at which the algorithm trusts itself; if below this, it uses the server's suggestion