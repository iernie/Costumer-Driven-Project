package com.kpro.sample;
//note double ** in all block comments

/**
 * One sentence describing what is here and what it does.
 *
 * @author author1
 * @author author2
 * 
 */


//NB- all imports above class definition
import java.util.ArrayList; //purpose of import


/**
 * Paragraph describing purpose of class in detail- what it contains, stores etc.
 * @version versionnum //NB (use date.version- eg DDMMYY.1, etc) 
 * @author author1
 */
//NB class defintion- one class per file please, unless anonymous 
public class TemplateClass {

	//NB all class variables here, grouped by type.
	//NB only define one per line, with associated comment of purpose
	
	public int status; //global status tracker, 0 if done
	private int internalStatus; //internal status tracker, 1 unless error
	
	private String name; //input name
	private ArrayList<String>  a;
	
	//NB all constructors here
	
	/**
	 * Paragraph laying out constructor details, etc. 
	 * Constructor can be auto-generated by Source->Generate Constructor...
	 * 
	 * @author author1
	 * 
	 * @param status default starting status, should be 1
	 * @param internalStatus default internal status, needs to be 1
	 * @param name  random string
	 * 
	 */
	public TemplateClass(int status, int internalStatus, String name) {
		super();
		this.status = status;
		this.setInternalStatus(internalStatus);
		this.name = name;
	}
	
	
	
	//NB begin methods here
	//NB only the PrivacyAdvisor should have a main method...
	/**
	 * description of method
	 * 
	 * @author author1
	 * @param a input int for method...
	 * @return and garbled string
	 */
	public String getResult(int a)
	{
		setInternalStatus(1);
		status = 1;
		String temp = name.replace((char)a, (char)status);
		status = 0;
		return temp;
		
	}
	//NB Just about all methods aren't that big.


	/**
	 * description of method
	 * 
	 * @author author1
	 * @param a input int for method...
	 * @return void
	 */
	public void setInternalStatus(int internalStatus) {
		this.internalStatus = internalStatus;
	}


	/**
	 * description of method
	 * 
	 * @param a input int for method...
	 * @return absolute value of the internal status times pi
	 */
	public int getInternalStatus() {
		return (int)Math.abs(internalStatus*Math.PI);
	}



	public void setA(ArrayList<String> a) {
		this.a = a;
	}



	public ArrayList<String> getA() {
		return a;
	}
	
	
	
}
